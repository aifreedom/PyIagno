# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.3 on Wed Sep  8 21:07:34 2010

import wx
from game import IagnoGame

class IagnoFrame(wx.Frame):
    
    # =======================================================
    # Constructor
    # =======================================================
    def __init__(self, *args, **kwds):
        kwds["style"] = wx.DEFAULT_FRAME_STYLE ^ (wx.RESIZE_BORDER
                                                  | wx.MINIMIZE_BOX
                                                  | wx.MAXIMIZE_BOX)
        wx.Frame.__init__(self, *args, **kwds)
        self.frame_1_statusbar = self.CreateStatusBar(2, 0)

        self.Bitmaps = [wx.Bitmap("image/dark.png", wx.BITMAP_TYPE_ANY),
                        wx.Bitmap("image/light.png", wx.BITMAP_TYPE_ANY),
                        wx.Bitmap("image/blank.png", wx.BITMAP_TYPE_ANY)]

        self.__set_properties()
        
        self.Bind(wx.EVT_PAINT, self.OnPaint)
        self.Bind(wx.EVT_LEFT_UP, self.OnClick)
        
        self.Game = IagnoGame()
        
    def __set_properties(self):
        self.SetTitle("PyIango")
        self.SetSize((320, 346))
        self.frame_1_statusbar.SetStatusWidths([-4, -6])
        frame_1_statusbar_fields = ["Dark's Move", "Dark: 2 Light: 2"]
        for i in range(len(frame_1_statusbar_fields)):
            self.frame_1_statusbar.SetStatusText(frame_1_statusbar_fields[i], i)

    def __Draw(self, color, pos):
        x, y = pos
        dc = wx.ClientDC(self)
        dc.DrawBitmap(self.Bitmaps[color], x*40, y*40, True)        

    # =======================================================
    # Event handlers
    # =======================================================
    def OnClick(self, evt):
        y, x = evt.GetPosition()

        player = self.Game.GetPlayer()
        try:
            l = self.Game.Set((x/40, y/40))
        except self.Game.InvalidPositionException:
            pass
        else:
            for yy, xx in l:
                self.__Draw(player, (xx, yy))

    def OnPaint(self, evt):
        sz = (40, 40)
        MemDC = [wx.MemoryDC(), wx.MemoryDC(), wx.MemoryDC()]
        map(lambda dc, bmp: dc.SelectObject(bmp), MemDC, self.Bitmaps)

        dc = wx.PaintDC(self)
        for i in range(8):
            for j in range(8):
                dc.DrawBitmap(self.Bitmaps[self.Game[i][j]], i*sz[0], j*sz[1], True)

# end of class IagnoFrame
